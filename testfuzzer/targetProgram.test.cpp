
#include <iostream>

#include "gtest/gtest.h"
#include <libfuzzer/TargetProgram.h>
#include <libfuzzer/Abi.h>

using namespace fuzzer;

TEST(TargetProgram, deploy)
{
  string codeStr = "60806040526000805534801561001457600080fd5b5060405160208061011683398101806040528101908080519060200190929190505050806000819055505060c98061004d6000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a5f3c23b146044575b600080fd5b348015604f57600080fd5b5060766004803603810190808035906020019092919080359060200190929190505050608c565b6040518082815260200191505060405180910390f35b6000818360005401019050929150505600a165627a7a72305820635b3b0bcc92ffd4760fbf55b628bc20561d6fd24fd595993b374490daa367130029";
  TargetProgram p;
  p.deploy(fromHex(codeStr));
  bytes data = encodeABI("", vector<string>{"int"}, vector<string>{"4"});
  bytes addData = encodeABI("add", vector<string> {"int", "int"}, vector<string> {"1", "1"});
  p.invokeConstructor(data);
  ExecutionResult res = p.invokeFunction(addData);
  cout << toHex(res.output) << endl;
}
